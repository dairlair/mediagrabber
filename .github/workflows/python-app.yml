name: Python application

on:
  push:
    branches:
      - master
      # branches used to test the workflow
      - "workflow-test-*"
  pull_request:
    branches: [ master ]
  release:
    types: [published, created, edited]

jobs:
  build:
    name: Build and Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: mediagrabber
          POSTGRES_USER: mediagrabber
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 8s
          --health-timeout 4s
          --health-retries 6
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        wget https://yt-dl.org/downloads/latest/youtube-dl -O youtube-dl
        chmod a+rx youtube-dl
        youtube-dl --version
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Apply migrations
      env:
        DSN: postgresql://mediagrabber:secret@localhost:5432/mediagrabber
      run: |
        make migrate
    - name: Test with pytest
      env:
        LOG_LEVEL: WARN
        DSN: postgresql://mediagrabber:secret@localhost:5432/mediagrabber
      run: |
        python -m pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  publish-docker-release:
    name: Publish Docker Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: dairlair/mediagrabber
          tag_with_ref: true

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: dairlair/mediagrabber/mediagrabber
          tag_with_ref: true
